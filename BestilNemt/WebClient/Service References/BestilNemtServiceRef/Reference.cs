//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.BestilNemtServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebClient.BestilNemtServiceRef.Admin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebClient.BestilNemtServiceRef.Company))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebClient.BestilNemtServiceRef.Customer))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Chain> ChainsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebClient.BestilNemtServiceRef.Login LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Chain> Chains {
            get {
                return this.ChainsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChainsField, value) != true)) {
                    this.ChainsField = value;
                    this.RaisePropertyChanged("Chains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebClient.BestilNemtServiceRef.Login Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonType {
            get {
                return this.PersonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonTypeField, value) != true)) {
                    this.PersonTypeField = value;
                    this.RaisePropertyChanged("PersonType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Admin : WebClient.BestilNemtServiceRef.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MembernrField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Membernr {
            get {
                return this.MembernrField;
            }
            set {
                if ((this.MembernrField.Equals(value) != true)) {
                    this.MembernrField = value;
                    this.RaisePropertyChanged("Membernr");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Company : WebClient.BestilNemtServiceRef.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CVRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KontonrField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CVR {
            get {
                return this.CVRField;
            }
            set {
                if ((this.CVRField.Equals(value) != true)) {
                    this.CVRField = value;
                    this.RaisePropertyChanged("CVR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Kontonr {
            get {
                return this.KontonrField;
            }
            set {
                if ((this.KontonrField.Equals(value) != true)) {
                    this.KontonrField = value;
                    this.RaisePropertyChanged("Kontonr");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Customer : WebClient.BestilNemtServiceRef.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chain", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Chain : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CVRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Person> PersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop> ShopsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVR {
            get {
                return this.CVRField;
            }
            set {
                if ((object.ReferenceEquals(this.CVRField, value) != true)) {
                    this.CVRField = value;
                    this.RaisePropertyChanged("CVR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImgPath {
            get {
                return this.ImgPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgPathField, value) != true)) {
                    this.ImgPathField = value;
                    this.RaisePropertyChanged("ImgPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Person> Persons {
            get {
                return this.PersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsField, value) != true)) {
                    this.PersonsField = value;
                    this.RaisePropertyChanged("Persons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop> Shops {
            get {
                return this.ShopsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopsField, value) != true)) {
                    this.ShopsField = value;
                    this.RaisePropertyChanged("Shops");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Shop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebClient.BestilNemtServiceRef.Chain ChainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse> WarehousesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebClient.BestilNemtServiceRef.Chain Chain {
            get {
                return this.ChainField;
            }
            set {
                if ((object.ReferenceEquals(this.ChainField, value) != true)) {
                    this.ChainField = value;
                    this.RaisePropertyChanged("Chain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cvr {
            get {
                return this.CvrField;
            }
            set {
                if ((object.ReferenceEquals(this.CvrField, value) != true)) {
                    this.CvrField = value;
                    this.RaisePropertyChanged("Cvr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse> Warehouses {
            get {
                return this.WarehousesField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehousesField, value) != true)) {
                    this.WarehousesField = value;
                    this.RaisePropertyChanged("Warehouses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Warehouse", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Warehouse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebClient.BestilNemtServiceRef.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebClient.BestilNemtServiceRef.Shop ShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinStock {
            get {
                return this.MinStockField;
            }
            set {
                if ((this.MinStockField.Equals(value) != true)) {
                    this.MinStockField = value;
                    this.RaisePropertyChanged("MinStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebClient.BestilNemtServiceRef.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebClient.BestilNemtServiceRef.Shop Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SavingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImgPath {
            get {
                return this.ImgPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgPathField, value) != true)) {
                    this.ImgPathField = value;
                    this.RaisePropertyChanged("ImgPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SavingId {
            get {
                return this.SavingIdField;
            }
            set {
                if ((this.SavingIdField.Equals(value) != true)) {
                    this.SavingIdField = value;
                    this.RaisePropertyChanged("SavingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebClient.BestilNemtServiceRef.PartOrder> PartOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.PartOrder> PartOrders {
            get {
                return this.PartOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOrdersField, value) != true)) {
                    this.PartOrdersField = value;
                    this.RaisePropertyChanged("PartOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartOrder", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PartOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebClient.BestilNemtServiceRef.Cart CartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebClient.BestilNemtServiceRef.Product ProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebClient.BestilNemtServiceRef.Cart Cart {
            get {
                return this.CartField;
            }
            set {
                if ((object.ReferenceEquals(this.CartField, value) != true)) {
                    this.CartField = value;
                    this.RaisePropertyChanged("Cart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartPrice {
            get {
                return this.PartPriceField;
            }
            set {
                if ((this.PartPriceField.Equals(value) != true)) {
                    this.PartPriceField = value;
                    this.RaisePropertyChanged("PartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebClient.BestilNemtServiceRef.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Saving", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Saving : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SavingPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SavingPercent {
            get {
                return this.SavingPercentField;
            }
            set {
                if ((this.SavingPercentField.Equals(value) != true)) {
                    this.SavingPercentField = value;
                    this.RaisePropertyChanged("SavingPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BestilNemtServiceRef.IBestilNemtService")]
    public interface IBestilNemtService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/FindCustomerResponse")]
        WebClient.BestilNemtServiceRef.Customer FindCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/FindCustomerResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Customer> FindCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/AddCustomerResponse")]
        int AddCustomer(WebClient.BestilNemtServiceRef.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/AddCustomerResponse")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(WebClient.BestilNemtServiceRef.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCustomerResponse")]
        int UpdateCustomer(WebClient.BestilNemtServiceRef.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerAsync(WebClient.BestilNemtServiceRef.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCustomerResponse")]
        int DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<int> DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCustomerResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Customer> GetAllCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Customer>> GetAllCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/AddAdminResponse")]
        int AddAdmin(WebClient.BestilNemtServiceRef.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/AddAdminResponse")]
        System.Threading.Tasks.Task<int> AddAdminAsync(WebClient.BestilNemtServiceRef.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/FindAdminResponse")]
        WebClient.BestilNemtServiceRef.Admin FindAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/FindAdminResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Admin> FindAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllAdmins", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllAdminsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Admin> GetAllAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllAdmins", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllAdminsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Admin>> GetAllAdminsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteAdminResponse")]
        int DeleteAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteAdminResponse")]
        System.Threading.Tasks.Task<int> DeleteAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateAdminResponse")]
        int UpdateAdmin(WebClient.BestilNemtServiceRef.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateAdminResponse")]
        System.Threading.Tasks.Task<int> UpdateAdminAsync(WebClient.BestilNemtServiceRef.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddShop", ReplyAction="http://tempuri.org/IBestilNemtService/AddShopResponse")]
        int AddShop(WebClient.BestilNemtServiceRef.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddShop", ReplyAction="http://tempuri.org/IBestilNemtService/AddShopResponse")]
        System.Threading.Tasks.Task<int> AddShopAsync(WebClient.BestilNemtServiceRef.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetShop", ReplyAction="http://tempuri.org/IBestilNemtService/GetShopResponse")]
        WebClient.BestilNemtServiceRef.Shop GetShop(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetShop", ReplyAction="http://tempuri.org/IBestilNemtService/GetShopResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Shop> GetShopAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShops", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop> GetAllShops();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShops", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop>> GetAllShopsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShopsByChainId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsByChainIdResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop> GetAllShopsByChainId(int chainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShopsByChainId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsByChainIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop>> GetAllShopsByChainIdAsync(int chainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateShop", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateShopResponse")]
        int UpdateShop(WebClient.BestilNemtServiceRef.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateShop", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateShopResponse")]
        System.Threading.Tasks.Task<int> UpdateShopAsync(WebClient.BestilNemtServiceRef.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteShop", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteShopResponse")]
        int DeleteShop(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteShop", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteShopResponse")]
        System.Threading.Tasks.Task<int> DeleteShopAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetChain", ReplyAction="http://tempuri.org/IBestilNemtService/GetChainResponse")]
        WebClient.BestilNemtServiceRef.Chain GetChain(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetChain", ReplyAction="http://tempuri.org/IBestilNemtService/GetChainResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Chain> GetChainAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllChains", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllChainsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Chain> GetAllChains();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllChains", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllChainsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Chain>> GetAllChainsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteChain", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteChainResponse")]
        int DeleteChain(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteChain", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteChainResponse")]
        System.Threading.Tasks.Task<int> DeleteChainAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddChain", ReplyAction="http://tempuri.org/IBestilNemtService/AddChainResponse")]
        int AddChain(WebClient.BestilNemtServiceRef.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddChain", ReplyAction="http://tempuri.org/IBestilNemtService/AddChainResponse")]
        System.Threading.Tasks.Task<int> AddChainAsync(WebClient.BestilNemtServiceRef.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateChain", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateChainResponse")]
        int UpdateChain(WebClient.BestilNemtServiceRef.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateChain", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateChainResponse")]
        System.Threading.Tasks.Task<int> UpdateChainAsync(WebClient.BestilNemtServiceRef.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/Login", ReplyAction="http://tempuri.org/IBestilNemtService/LoginResponse")]
        WebClient.BestilNemtServiceRef.Login Login([System.ServiceModel.MessageParameterAttribute(Name="login")] WebClient.BestilNemtServiceRef.Login login1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/Login", ReplyAction="http://tempuri.org/IBestilNemtService/LoginResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Login> LoginAsync(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddLogin", ReplyAction="http://tempuri.org/IBestilNemtService/AddLoginResponse")]
        int AddLogin(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddLogin", ReplyAction="http://tempuri.org/IBestilNemtService/AddLoginResponse")]
        System.Threading.Tasks.Task<int> AddLoginAsync(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateLogin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateLoginResponse")]
        int UpdateLogin(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateLogin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateLoginResponse")]
        System.Threading.Tasks.Task<int> UpdateLoginAsync(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteLogin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteLoginResponse")]
        int DeleteLogin(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteLogin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteLoginResponse")]
        System.Threading.Tasks.Task<int> DeleteLoginAsync(WebClient.BestilNemtServiceRef.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCompany", ReplyAction="http://tempuri.org/IBestilNemtService/AddCompanyResponse")]
        int AddCompany(WebClient.BestilNemtServiceRef.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCompany", ReplyAction="http://tempuri.org/IBestilNemtService/AddCompanyResponse")]
        System.Threading.Tasks.Task<int> AddCompanyAsync(WebClient.BestilNemtServiceRef.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllCompany", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllCompanyResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Company> FindAllCompany();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllCompany", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllCompanyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Company>> FindAllCompanyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCompany", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCompanyResponse")]
        int DeleteCompany(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCompany", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCompanyResponse")]
        System.Threading.Tasks.Task<int> DeleteCompanyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCompany", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCompanyResponse")]
        int UpdateCompany(WebClient.BestilNemtServiceRef.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCompany", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCompanyResponse")]
        System.Threading.Tasks.Task<int> UpdateCompanyAsync(WebClient.BestilNemtServiceRef.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindCompany", ReplyAction="http://tempuri.org/IBestilNemtService/FindCompanyResponse")]
        WebClient.BestilNemtServiceRef.Company FindCompany(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindCompany", ReplyAction="http://tempuri.org/IBestilNemtService/FindCompanyResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Company> FindCompanyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddProduct", ReplyAction="http://tempuri.org/IBestilNemtService/AddProductResponse")]
        int AddProduct(WebClient.BestilNemtServiceRef.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddProduct", ReplyAction="http://tempuri.org/IBestilNemtService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(WebClient.BestilNemtServiceRef.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetProduct", ReplyAction="http://tempuri.org/IBestilNemtService/GetProductResponse")]
        WebClient.BestilNemtServiceRef.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetProduct", ReplyAction="http://tempuri.org/IBestilNemtService/GetProductResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllSoldProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllSoldProductsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> GetAllSoldProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllSoldProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllSoldProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> GetAllSoldProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavings", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavingsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> GetAllProductsWithSavings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavings", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavingsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> GetAllProductsWithSavingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateProduct", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateProductResponse")]
        int UpdateProduct(WebClient.BestilNemtServiceRef.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateProduct", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateProductResponse")]
        System.Threading.Tasks.Task<int> UpdateProductAsync(WebClient.BestilNemtServiceRef.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteProduct", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteProductResponse")]
        int DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteProduct", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteProductResponse")]
        System.Threading.Tasks.Task<int> DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddCartResponse")]
        int AddCart(WebClient.BestilNemtServiceRef.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddCartResponse")]
        System.Threading.Tasks.Task<int> AddCartAsync(WebClient.BestilNemtServiceRef.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindCart", ReplyAction="http://tempuri.org/IBestilNemtService/FindCartResponse")]
        WebClient.BestilNemtServiceRef.Cart FindCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindCart", ReplyAction="http://tempuri.org/IBestilNemtService/FindCartResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Cart> FindCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCarts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCartsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Cart> GetAllCarts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCarts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCartsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Cart>> GetAllCartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCart", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCartResponse")]
        int UpdateCart(WebClient.BestilNemtServiceRef.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCart", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCartResponse")]
        System.Threading.Tasks.Task<int> UpdateCartAsync(WebClient.BestilNemtServiceRef.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCart", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCartResponse")]
        int DeleteCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCart", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCartResponse")]
        System.Threading.Tasks.Task<int> DeleteCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrderToCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderToCartResponse")]
        int AddPartOrderToCart(WebClient.BestilNemtServiceRef.Cart cart, WebClient.BestilNemtServiceRef.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrderToCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderToCartResponse")]
        System.Threading.Tasks.Task<int> AddPartOrderToCartAsync(WebClient.BestilNemtServiceRef.Cart cart, WebClient.BestilNemtServiceRef.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/FindPartOrderResponse")]
        WebClient.BestilNemtServiceRef.PartOrder FindPartOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/FindPartOrderResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.PartOrder> FindPartOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/RemovePartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/RemovePartOrderResponse")]
        int RemovePartOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/RemovePartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/RemovePartOrderResponse")]
        System.Threading.Tasks.Task<int> RemovePartOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderResponse")]
        int AddPartOrder(WebClient.BestilNemtServiceRef.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderResponse")]
        System.Threading.Tasks.Task<int> AddPartOrderAsync(WebClient.BestilNemtServiceRef.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdatePartorder", ReplyAction="http://tempuri.org/IBestilNemtService/UpdatePartorderResponse")]
        int UpdatePartorder(WebClient.BestilNemtServiceRef.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdatePartorder", ReplyAction="http://tempuri.org/IBestilNemtService/UpdatePartorderResponse")]
        System.Threading.Tasks.Task<int> UpdatePartorderAsync(WebClient.BestilNemtServiceRef.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllPartOrdersResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.PartOrder> GetAllPartOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllPartOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.PartOrder>> GetAllPartOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/AddWarehouseResponse")]
        int AddWarehouse(WebClient.BestilNemtServiceRef.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/AddWarehouseResponse")]
        System.Threading.Tasks.Task<int> AddWarehouseAsync(WebClient.BestilNemtServiceRef.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/FindWarehouseResponse")]
        WebClient.BestilNemtServiceRef.Warehouse FindWarehouse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/FindWarehouseResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Warehouse> FindWarehouseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllWarehouses", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllWarehousesResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse> FindAllWarehouses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllWarehouses", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllWarehousesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse>> FindAllWarehousesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllWarehousesByShopId", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllWarehousesByShopIdResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse> FindAllWarehousesByShopId(int shopId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllWarehousesByShopId", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllWarehousesByShopIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse>> FindAllWarehousesByShopIdAsync(int shopId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateWarehouseResponse")]
        int UpdateWarehouse(WebClient.BestilNemtServiceRef.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateWarehouseResponse")]
        System.Threading.Tasks.Task<int> UpdateWarehouseAsync(WebClient.BestilNemtServiceRef.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteWarehouseResponse")]
        int DeleteWarehouse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteWarehouseResponse")]
        System.Threading.Tasks.Task<int> DeleteWarehouseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddSaving", ReplyAction="http://tempuri.org/IBestilNemtService/AddSavingResponse")]
        int AddSaving(WebClient.BestilNemtServiceRef.Saving saving, WebClient.BestilNemtServiceRef.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddSaving", ReplyAction="http://tempuri.org/IBestilNemtService/AddSavingResponse")]
        System.Threading.Tasks.Task<int> AddSavingAsync(WebClient.BestilNemtServiceRef.Saving saving, WebClient.BestilNemtServiceRef.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindSaving", ReplyAction="http://tempuri.org/IBestilNemtService/FindSavingResponse")]
        WebClient.BestilNemtServiceRef.Saving FindSaving(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindSaving", ReplyAction="http://tempuri.org/IBestilNemtService/FindSavingResponse")]
        System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Saving> FindSavingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllSavings", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllSavingsResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Saving> FindAllSavings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindAllSavings", ReplyAction="http://tempuri.org/IBestilNemtService/FindAllSavingsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Saving>> FindAllSavingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateSaving", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateSavingResponse")]
        int UpdateSaving(WebClient.BestilNemtServiceRef.Saving saving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateSaving", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateSavingResponse")]
        System.Threading.Tasks.Task<int> UpdateSavingAsync(WebClient.BestilNemtServiceRef.Saving saving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteSaving", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteSavingResponse")]
        int DeleteSaving(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteSaving", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteSavingResponse")]
        System.Threading.Tasks.Task<int> DeleteSavingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindProductsByName", ReplyAction="http://tempuri.org/IBestilNemtService/FindProductsByNameResponse")]
        System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> FindProductsByName(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/FindProductsByName", ReplyAction="http://tempuri.org/IBestilNemtService/FindProductsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> FindProductsByNameAsync(string input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBestilNemtServiceChannel : WebClient.BestilNemtServiceRef.IBestilNemtService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BestilNemtServiceClient : System.ServiceModel.ClientBase<WebClient.BestilNemtServiceRef.IBestilNemtService>, WebClient.BestilNemtServiceRef.IBestilNemtService {
        
        public BestilNemtServiceClient() {
        }
        
        public BestilNemtServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BestilNemtServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BestilNemtServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BestilNemtServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebClient.BestilNemtServiceRef.Customer FindCustomer(int id) {
            return base.Channel.FindCustomer(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Customer> FindCustomerAsync(int id) {
            return base.Channel.FindCustomerAsync(id);
        }
        
        public int AddCustomer(WebClient.BestilNemtServiceRef.Customer customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(WebClient.BestilNemtServiceRef.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public int UpdateCustomer(WebClient.BestilNemtServiceRef.Customer customer) {
            return base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerAsync(WebClient.BestilNemtServiceRef.Customer customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public int DeleteCustomer(int id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Customer> GetAllCustomer() {
            return base.Channel.GetAllCustomer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Customer>> GetAllCustomerAsync() {
            return base.Channel.GetAllCustomerAsync();
        }
        
        public int AddAdmin(WebClient.BestilNemtServiceRef.Admin admin) {
            return base.Channel.AddAdmin(admin);
        }
        
        public System.Threading.Tasks.Task<int> AddAdminAsync(WebClient.BestilNemtServiceRef.Admin admin) {
            return base.Channel.AddAdminAsync(admin);
        }
        
        public WebClient.BestilNemtServiceRef.Admin FindAdmin(int id) {
            return base.Channel.FindAdmin(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Admin> FindAdminAsync(int id) {
            return base.Channel.FindAdminAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Admin> GetAllAdmins() {
            return base.Channel.GetAllAdmins();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Admin>> GetAllAdminsAsync() {
            return base.Channel.GetAllAdminsAsync();
        }
        
        public int DeleteAdmin(int id) {
            return base.Channel.DeleteAdmin(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAdminAsync(int id) {
            return base.Channel.DeleteAdminAsync(id);
        }
        
        public int UpdateAdmin(WebClient.BestilNemtServiceRef.Admin admin) {
            return base.Channel.UpdateAdmin(admin);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAdminAsync(WebClient.BestilNemtServiceRef.Admin admin) {
            return base.Channel.UpdateAdminAsync(admin);
        }
        
        public int AddShop(WebClient.BestilNemtServiceRef.Shop shop) {
            return base.Channel.AddShop(shop);
        }
        
        public System.Threading.Tasks.Task<int> AddShopAsync(WebClient.BestilNemtServiceRef.Shop shop) {
            return base.Channel.AddShopAsync(shop);
        }
        
        public WebClient.BestilNemtServiceRef.Shop GetShop(int id) {
            return base.Channel.GetShop(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Shop> GetShopAsync(int id) {
            return base.Channel.GetShopAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop> GetAllShops() {
            return base.Channel.GetAllShops();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop>> GetAllShopsAsync() {
            return base.Channel.GetAllShopsAsync();
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop> GetAllShopsByChainId(int chainId) {
            return base.Channel.GetAllShopsByChainId(chainId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Shop>> GetAllShopsByChainIdAsync(int chainId) {
            return base.Channel.GetAllShopsByChainIdAsync(chainId);
        }
        
        public int UpdateShop(WebClient.BestilNemtServiceRef.Shop shop) {
            return base.Channel.UpdateShop(shop);
        }
        
        public System.Threading.Tasks.Task<int> UpdateShopAsync(WebClient.BestilNemtServiceRef.Shop shop) {
            return base.Channel.UpdateShopAsync(shop);
        }
        
        public int DeleteShop(int id) {
            return base.Channel.DeleteShop(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteShopAsync(int id) {
            return base.Channel.DeleteShopAsync(id);
        }
        
        public WebClient.BestilNemtServiceRef.Chain GetChain(int id) {
            return base.Channel.GetChain(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Chain> GetChainAsync(int id) {
            return base.Channel.GetChainAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Chain> GetAllChains() {
            return base.Channel.GetAllChains();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Chain>> GetAllChainsAsync() {
            return base.Channel.GetAllChainsAsync();
        }
        
        public int DeleteChain(int id) {
            return base.Channel.DeleteChain(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteChainAsync(int id) {
            return base.Channel.DeleteChainAsync(id);
        }
        
        public int AddChain(WebClient.BestilNemtServiceRef.Chain chain) {
            return base.Channel.AddChain(chain);
        }
        
        public System.Threading.Tasks.Task<int> AddChainAsync(WebClient.BestilNemtServiceRef.Chain chain) {
            return base.Channel.AddChainAsync(chain);
        }
        
        public int UpdateChain(WebClient.BestilNemtServiceRef.Chain chain) {
            return base.Channel.UpdateChain(chain);
        }
        
        public System.Threading.Tasks.Task<int> UpdateChainAsync(WebClient.BestilNemtServiceRef.Chain chain) {
            return base.Channel.UpdateChainAsync(chain);
        }
        
        public WebClient.BestilNemtServiceRef.Login Login(WebClient.BestilNemtServiceRef.Login login1) {
            return base.Channel.Login(login1);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Login> LoginAsync(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.LoginAsync(login);
        }
        
        public int AddLogin(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.AddLogin(login);
        }
        
        public System.Threading.Tasks.Task<int> AddLoginAsync(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.AddLoginAsync(login);
        }
        
        public int UpdateLogin(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.UpdateLogin(login);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLoginAsync(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.UpdateLoginAsync(login);
        }
        
        public int DeleteLogin(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.DeleteLogin(login);
        }
        
        public System.Threading.Tasks.Task<int> DeleteLoginAsync(WebClient.BestilNemtServiceRef.Login login) {
            return base.Channel.DeleteLoginAsync(login);
        }
        
        public int AddCompany(WebClient.BestilNemtServiceRef.Company company) {
            return base.Channel.AddCompany(company);
        }
        
        public System.Threading.Tasks.Task<int> AddCompanyAsync(WebClient.BestilNemtServiceRef.Company company) {
            return base.Channel.AddCompanyAsync(company);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Company> FindAllCompany() {
            return base.Channel.FindAllCompany();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Company>> FindAllCompanyAsync() {
            return base.Channel.FindAllCompanyAsync();
        }
        
        public int DeleteCompany(int id) {
            return base.Channel.DeleteCompany(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCompanyAsync(int id) {
            return base.Channel.DeleteCompanyAsync(id);
        }
        
        public int UpdateCompany(WebClient.BestilNemtServiceRef.Company company) {
            return base.Channel.UpdateCompany(company);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCompanyAsync(WebClient.BestilNemtServiceRef.Company company) {
            return base.Channel.UpdateCompanyAsync(company);
        }
        
        public WebClient.BestilNemtServiceRef.Company FindCompany(int id) {
            return base.Channel.FindCompany(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Company> FindCompanyAsync(int id) {
            return base.Channel.FindCompanyAsync(id);
        }
        
        public int AddProduct(WebClient.BestilNemtServiceRef.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(WebClient.BestilNemtServiceRef.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public WebClient.BestilNemtServiceRef.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> GetAllSoldProducts() {
            return base.Channel.GetAllSoldProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> GetAllSoldProductsAsync() {
            return base.Channel.GetAllSoldProductsAsync();
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> GetAllProductsWithSavings() {
            return base.Channel.GetAllProductsWithSavings();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> GetAllProductsWithSavingsAsync() {
            return base.Channel.GetAllProductsWithSavingsAsync();
        }
        
        public int UpdateProduct(WebClient.BestilNemtServiceRef.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductAsync(WebClient.BestilNemtServiceRef.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public int DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public int AddCart(WebClient.BestilNemtServiceRef.Cart cart) {
            return base.Channel.AddCart(cart);
        }
        
        public System.Threading.Tasks.Task<int> AddCartAsync(WebClient.BestilNemtServiceRef.Cart cart) {
            return base.Channel.AddCartAsync(cart);
        }
        
        public WebClient.BestilNemtServiceRef.Cart FindCart(int id) {
            return base.Channel.FindCart(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Cart> FindCartAsync(int id) {
            return base.Channel.FindCartAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Cart> GetAllCarts() {
            return base.Channel.GetAllCarts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Cart>> GetAllCartsAsync() {
            return base.Channel.GetAllCartsAsync();
        }
        
        public int UpdateCart(WebClient.BestilNemtServiceRef.Cart cart) {
            return base.Channel.UpdateCart(cart);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCartAsync(WebClient.BestilNemtServiceRef.Cart cart) {
            return base.Channel.UpdateCartAsync(cart);
        }
        
        public int DeleteCart(int id) {
            return base.Channel.DeleteCart(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCartAsync(int id) {
            return base.Channel.DeleteCartAsync(id);
        }
        
        public int AddPartOrderToCart(WebClient.BestilNemtServiceRef.Cart cart, WebClient.BestilNemtServiceRef.PartOrder partOrder) {
            return base.Channel.AddPartOrderToCart(cart, partOrder);
        }
        
        public System.Threading.Tasks.Task<int> AddPartOrderToCartAsync(WebClient.BestilNemtServiceRef.Cart cart, WebClient.BestilNemtServiceRef.PartOrder partOrder) {
            return base.Channel.AddPartOrderToCartAsync(cart, partOrder);
        }
        
        public WebClient.BestilNemtServiceRef.PartOrder FindPartOrder(int id) {
            return base.Channel.FindPartOrder(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.PartOrder> FindPartOrderAsync(int id) {
            return base.Channel.FindPartOrderAsync(id);
        }
        
        public int RemovePartOrder(int id) {
            return base.Channel.RemovePartOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> RemovePartOrderAsync(int id) {
            return base.Channel.RemovePartOrderAsync(id);
        }
        
        public int AddPartOrder(WebClient.BestilNemtServiceRef.PartOrder partOrder) {
            return base.Channel.AddPartOrder(partOrder);
        }
        
        public System.Threading.Tasks.Task<int> AddPartOrderAsync(WebClient.BestilNemtServiceRef.PartOrder partOrder) {
            return base.Channel.AddPartOrderAsync(partOrder);
        }
        
        public int UpdatePartorder(WebClient.BestilNemtServiceRef.PartOrder partOrder) {
            return base.Channel.UpdatePartorder(partOrder);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePartorderAsync(WebClient.BestilNemtServiceRef.PartOrder partOrder) {
            return base.Channel.UpdatePartorderAsync(partOrder);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.PartOrder> GetAllPartOrders() {
            return base.Channel.GetAllPartOrders();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.PartOrder>> GetAllPartOrdersAsync() {
            return base.Channel.GetAllPartOrdersAsync();
        }
        
        public int AddWarehouse(WebClient.BestilNemtServiceRef.Warehouse warehouse) {
            return base.Channel.AddWarehouse(warehouse);
        }
        
        public System.Threading.Tasks.Task<int> AddWarehouseAsync(WebClient.BestilNemtServiceRef.Warehouse warehouse) {
            return base.Channel.AddWarehouseAsync(warehouse);
        }
        
        public WebClient.BestilNemtServiceRef.Warehouse FindWarehouse(int id) {
            return base.Channel.FindWarehouse(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Warehouse> FindWarehouseAsync(int id) {
            return base.Channel.FindWarehouseAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse> FindAllWarehouses() {
            return base.Channel.FindAllWarehouses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse>> FindAllWarehousesAsync() {
            return base.Channel.FindAllWarehousesAsync();
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse> FindAllWarehousesByShopId(int shopId) {
            return base.Channel.FindAllWarehousesByShopId(shopId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Warehouse>> FindAllWarehousesByShopIdAsync(int shopId) {
            return base.Channel.FindAllWarehousesByShopIdAsync(shopId);
        }
        
        public int UpdateWarehouse(WebClient.BestilNemtServiceRef.Warehouse warehouse) {
            return base.Channel.UpdateWarehouse(warehouse);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWarehouseAsync(WebClient.BestilNemtServiceRef.Warehouse warehouse) {
            return base.Channel.UpdateWarehouseAsync(warehouse);
        }
        
        public int DeleteWarehouse(int id) {
            return base.Channel.DeleteWarehouse(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteWarehouseAsync(int id) {
            return base.Channel.DeleteWarehouseAsync(id);
        }
        
        public int AddSaving(WebClient.BestilNemtServiceRef.Saving saving, WebClient.BestilNemtServiceRef.Product product) {
            return base.Channel.AddSaving(saving, product);
        }
        
        public System.Threading.Tasks.Task<int> AddSavingAsync(WebClient.BestilNemtServiceRef.Saving saving, WebClient.BestilNemtServiceRef.Product product) {
            return base.Channel.AddSavingAsync(saving, product);
        }
        
        public WebClient.BestilNemtServiceRef.Saving FindSaving(int id) {
            return base.Channel.FindSaving(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.BestilNemtServiceRef.Saving> FindSavingAsync(int id) {
            return base.Channel.FindSavingAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Saving> FindAllSavings() {
            return base.Channel.FindAllSavings();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Saving>> FindAllSavingsAsync() {
            return base.Channel.FindAllSavingsAsync();
        }
        
        public int UpdateSaving(WebClient.BestilNemtServiceRef.Saving saving) {
            return base.Channel.UpdateSaving(saving);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSavingAsync(WebClient.BestilNemtServiceRef.Saving saving) {
            return base.Channel.UpdateSavingAsync(saving);
        }
        
        public int DeleteSaving(int id) {
            return base.Channel.DeleteSaving(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSavingAsync(int id) {
            return base.Channel.DeleteSavingAsync(id);
        }
        
        public System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product> FindProductsByName(string input) {
            return base.Channel.FindProductsByName(input);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebClient.BestilNemtServiceRef.Product>> FindProductsByNameAsync(string input) {
            return base.Channel.FindProductsByNameAsync(input);
        }
    }
}
