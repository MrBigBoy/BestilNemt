//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_Client.BestilNemtWPF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_Client.BestilNemtWPF.Admin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_Client.BestilNemtWPF.Company))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_Client.BestilNemtWPF.Customer))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Chain[] ChainsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Login LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Chain[] Chains {
            get {
                return this.ChainsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChainsField, value) != true)) {
                    this.ChainsField = value;
                    this.RaisePropertyChanged("Chains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Login Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonType {
            get {
                return this.PersonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonTypeField, value) != true)) {
                    this.PersonTypeField = value;
                    this.RaisePropertyChanged("PersonType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Admin : WPF_Client.BestilNemtWPF.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MembernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShopIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Membernr {
            get {
                return this.MembernrField;
            }
            set {
                if ((this.MembernrField.Equals(value) != true)) {
                    this.MembernrField = value;
                    this.RaisePropertyChanged("Membernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopId {
            get {
                return this.ShopIdField;
            }
            set {
                if ((this.ShopIdField.Equals(value) != true)) {
                    this.ShopIdField = value;
                    this.RaisePropertyChanged("ShopId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Company : WPF_Client.BestilNemtWPF.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CVRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KontonrField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CVR {
            get {
                return this.CVRField;
            }
            set {
                if ((this.CVRField.Equals(value) != true)) {
                    this.CVRField = value;
                    this.RaisePropertyChanged("CVR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Kontonr {
            get {
                return this.KontonrField;
            }
            set {
                if ((this.KontonrField.Equals(value) != true)) {
                    this.KontonrField = value;
                    this.RaisePropertyChanged("Kontonr");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Customer : WPF_Client.BestilNemtWPF.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chain", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Chain : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Person[] PersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Shop[] ShopsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cvr {
            get {
                return this.CvrField;
            }
            set {
                if ((object.ReferenceEquals(this.CvrField, value) != true)) {
                    this.CvrField = value;
                    this.RaisePropertyChanged("Cvr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImgPath {
            get {
                return this.ImgPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgPathField, value) != true)) {
                    this.ImgPathField = value;
                    this.RaisePropertyChanged("ImgPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Person[] Persons {
            get {
                return this.PersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsField, value) != true)) {
                    this.PersonsField = value;
                    this.RaisePropertyChanged("Persons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Shop[] Shops {
            get {
                return this.ShopsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopsField, value) != true)) {
                    this.ShopsField = value;
                    this.RaisePropertyChanged("Shops");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Shop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Chain ChainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Warehouse[] WarehousesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Chain Chain {
            get {
                return this.ChainField;
            }
            set {
                if ((object.ReferenceEquals(this.ChainField, value) != true)) {
                    this.ChainField = value;
                    this.RaisePropertyChanged("Chain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cvr {
            get {
                return this.CvrField;
            }
            set {
                if ((object.ReferenceEquals(this.CvrField, value) != true)) {
                    this.CvrField = value;
                    this.RaisePropertyChanged("Cvr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningTime {
            get {
                return this.OpeningTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningTimeField, value) != true)) {
                    this.OpeningTimeField = value;
                    this.RaisePropertyChanged("OpeningTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Warehouse[] Warehouses {
            get {
                return this.WarehousesField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehousesField, value) != true)) {
                    this.WarehousesField = value;
                    this.RaisePropertyChanged("Warehouses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Warehouse", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Warehouse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Shop ShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinStock {
            get {
                return this.MinStockField;
            }
            set {
                if ((this.MinStockField.Equals(value) != true)) {
                    this.MinStockField = value;
                    this.RaisePropertyChanged("MinStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Shop Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SavingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImgPath {
            get {
                return this.ImgPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgPathField, value) != true)) {
                    this.ImgPathField = value;
                    this.RaisePropertyChanged("ImgPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SavingId {
            get {
                return this.SavingIdField;
            }
            set {
                if ((this.SavingIdField.Equals(value) != true)) {
                    this.SavingIdField = value;
                    this.RaisePropertyChanged("SavingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.PartOrder[] PartOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShopIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChainId {
            get {
                return this.ChainIdField;
            }
            set {
                if ((this.ChainIdField.Equals(value) != true)) {
                    this.ChainIdField = value;
                    this.RaisePropertyChanged("ChainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.PartOrder[] PartOrders {
            get {
                return this.PartOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOrdersField, value) != true)) {
                    this.PartOrdersField = value;
                    this.RaisePropertyChanged("PartOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopId {
            get {
                return this.ShopIdField;
            }
            set {
                if ((this.ShopIdField.Equals(value) != true)) {
                    this.ShopIdField = value;
                    this.RaisePropertyChanged("ShopId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartOrder", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PartOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Cart CartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Product ProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Cart Cart {
            get {
                return this.CartField;
            }
            set {
                if ((object.ReferenceEquals(this.CartField, value) != true)) {
                    this.CartField = value;
                    this.RaisePropertyChanged("Cart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartPrice {
            get {
                return this.PartPriceField;
            }
            set {
                if ((this.PartPriceField.Equals(value) != true)) {
                    this.PartPriceField = value;
                    this.RaisePropertyChanged("PartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Saving", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Saving : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_Client.BestilNemtWPF.Product[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SavingPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_Client.BestilNemtWPF.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SavingPercent {
            get {
                return this.SavingPercentField;
            }
            set {
                if ((this.SavingPercentField.Equals(value) != true)) {
                    this.SavingPercentField = value;
                    this.RaisePropertyChanged("SavingPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BestilNemtWPF.IBestilNemtService")]
    public interface IBestilNemtService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/GetCustomerResponse")]
        WPF_Client.BestilNemtWPF.Customer GetCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/GetCustomerResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Customer> GetCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/AddCustomerResponse")]
        int AddCustomer(WPF_Client.BestilNemtWPF.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/AddCustomerResponse")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(WPF_Client.BestilNemtWPF.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCustomerResponse")]
        int UpdateCustomer(WPF_Client.BestilNemtWPF.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerAsync(WPF_Client.BestilNemtWPF.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCustomerResponse")]
        int DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<int> DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCustomerResponse")]
        WPF_Client.BestilNemtWPF.Customer[] GetAllCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCustomer", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCustomerResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Customer[]> GetAllCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/AddAdminResponse")]
        int AddAdmin(WPF_Client.BestilNemtWPF.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/AddAdminResponse")]
        System.Threading.Tasks.Task<int> AddAdminAsync(WPF_Client.BestilNemtWPF.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/GetAdminResponse")]
        WPF_Client.BestilNemtWPF.Admin GetAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/GetAdminResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Admin> GetAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllAdmins", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllAdminsResponse")]
        WPF_Client.BestilNemtWPF.Admin[] GetAllAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllAdmins", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllAdminsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Admin[]> GetAllAdminsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteAdminResponse")]
        int DeleteAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteAdminResponse")]
        System.Threading.Tasks.Task<int> DeleteAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateAdminResponse")]
        int UpdateAdmin(WPF_Client.BestilNemtWPF.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateAdmin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateAdminResponse")]
        System.Threading.Tasks.Task<int> UpdateAdminAsync(WPF_Client.BestilNemtWPF.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddShop", ReplyAction="http://tempuri.org/IBestilNemtService/AddShopResponse")]
        int AddShop(WPF_Client.BestilNemtWPF.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddShop", ReplyAction="http://tempuri.org/IBestilNemtService/AddShopResponse")]
        System.Threading.Tasks.Task<int> AddShopAsync(WPF_Client.BestilNemtWPF.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetShop", ReplyAction="http://tempuri.org/IBestilNemtService/GetShopResponse")]
        WPF_Client.BestilNemtWPF.Shop GetShop(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetShop", ReplyAction="http://tempuri.org/IBestilNemtService/GetShopResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Shop> GetShopAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShops", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsResponse")]
        WPF_Client.BestilNemtWPF.Shop[] GetAllShops();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShops", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Shop[]> GetAllShopsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShopsByChainId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsByChainIdResponse")]
        WPF_Client.BestilNemtWPF.Shop[] GetAllShopsByChainId(int chainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllShopsByChainId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllShopsByChainIdResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Shop[]> GetAllShopsByChainIdAsync(int chainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateShop", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateShopResponse")]
        int UpdateShop(WPF_Client.BestilNemtWPF.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateShop", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateShopResponse")]
        System.Threading.Tasks.Task<int> UpdateShopAsync(WPF_Client.BestilNemtWPF.Shop shop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteShop", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteShopResponse")]
        int DeleteShop(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteShop", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteShopResponse")]
        System.Threading.Tasks.Task<int> DeleteShopAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetChain", ReplyAction="http://tempuri.org/IBestilNemtService/GetChainResponse")]
        WPF_Client.BestilNemtWPF.Chain GetChain(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetChain", ReplyAction="http://tempuri.org/IBestilNemtService/GetChainResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Chain> GetChainAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllChains", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllChainsResponse")]
        WPF_Client.BestilNemtWPF.Chain[] GetAllChains();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllChains", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllChainsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Chain[]> GetAllChainsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteChain", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteChainResponse")]
        int DeleteChain(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteChain", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteChainResponse")]
        System.Threading.Tasks.Task<int> DeleteChainAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddChain", ReplyAction="http://tempuri.org/IBestilNemtService/AddChainResponse")]
        int AddChain(WPF_Client.BestilNemtWPF.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddChain", ReplyAction="http://tempuri.org/IBestilNemtService/AddChainResponse")]
        System.Threading.Tasks.Task<int> AddChainAsync(WPF_Client.BestilNemtWPF.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateChain", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateChainResponse")]
        int UpdateChain(WPF_Client.BestilNemtWPF.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateChain", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateChainResponse")]
        System.Threading.Tasks.Task<int> UpdateChainAsync(WPF_Client.BestilNemtWPF.Chain chain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/Login", ReplyAction="http://tempuri.org/IBestilNemtService/LoginResponse")]
        WPF_Client.BestilNemtWPF.Login Login([System.ServiceModel.MessageParameterAttribute(Name="login")] WPF_Client.BestilNemtWPF.Login login1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/Login", ReplyAction="http://tempuri.org/IBestilNemtService/LoginResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Login> LoginAsync(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddLogin", ReplyAction="http://tempuri.org/IBestilNemtService/AddLoginResponse")]
        int AddLogin(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddLogin", ReplyAction="http://tempuri.org/IBestilNemtService/AddLoginResponse")]
        System.Threading.Tasks.Task<int> AddLoginAsync(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateLogin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateLoginResponse")]
        int UpdateLogin(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateLogin", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateLoginResponse")]
        System.Threading.Tasks.Task<int> UpdateLoginAsync(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteLogin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteLoginResponse")]
        int DeleteLogin(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteLogin", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteLoginResponse")]
        System.Threading.Tasks.Task<int> DeleteLoginAsync(WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCompany", ReplyAction="http://tempuri.org/IBestilNemtService/AddCompanyResponse")]
        int AddCompany(WPF_Client.BestilNemtWPF.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCompany", ReplyAction="http://tempuri.org/IBestilNemtService/AddCompanyResponse")]
        System.Threading.Tasks.Task<int> AddCompanyAsync(WPF_Client.BestilNemtWPF.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCompany", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCompanyResponse")]
        WPF_Client.BestilNemtWPF.Company[] GetAllCompany();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCompany", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCompanyResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Company[]> GetAllCompanyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCompany", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCompanyResponse")]
        int DeleteCompany(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCompany", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCompanyResponse")]
        System.Threading.Tasks.Task<int> DeleteCompanyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCompany", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCompanyResponse")]
        int UpdateCompany(WPF_Client.BestilNemtWPF.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCompany", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCompanyResponse")]
        System.Threading.Tasks.Task<int> UpdateCompanyAsync(WPF_Client.BestilNemtWPF.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCompany", ReplyAction="http://tempuri.org/IBestilNemtService/GetCompanyResponse")]
        WPF_Client.BestilNemtWPF.Company GetCompany(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCompany", ReplyAction="http://tempuri.org/IBestilNemtService/GetCompanyResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Company> GetCompanyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddProduct", ReplyAction="http://tempuri.org/IBestilNemtService/AddProductResponse")]
        int AddProduct(WPF_Client.BestilNemtWPF.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddProduct", ReplyAction="http://tempuri.org/IBestilNemtService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(WPF_Client.BestilNemtWPF.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetProduct", ReplyAction="http://tempuri.org/IBestilNemtService/GetProductResponse")]
        WPF_Client.BestilNemtWPF.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetProduct", ReplyAction="http://tempuri.org/IBestilNemtService/GetProductResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsResponse")]
        WPF_Client.BestilNemtWPF.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllSoldProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllSoldProductsResponse")]
        WPF_Client.BestilNemtWPF.Product[] GetAllSoldProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllSoldProducts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllSoldProductsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetAllSoldProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavings", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavingsResponse")]
        WPF_Client.BestilNemtWPF.Product[] GetAllProductsWithSavings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavings", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllProductsWithSavingsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetAllProductsWithSavingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateProduct", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateProductResponse")]
        int UpdateProduct(WPF_Client.BestilNemtWPF.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateProduct", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateProductResponse")]
        System.Threading.Tasks.Task<int> UpdateProductAsync(WPF_Client.BestilNemtWPF.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteProduct", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteProductResponse")]
        int DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteProduct", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteProductResponse")]
        System.Threading.Tasks.Task<int> DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddCartResponse")]
        int AddCart(WPF_Client.BestilNemtWPF.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddCartResponse")]
        System.Threading.Tasks.Task<int> AddCartAsync(WPF_Client.BestilNemtWPF.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCartWithPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/AddCartWithPartOrdersResponse")]
        int AddCartWithPartOrders(WPF_Client.BestilNemtWPF.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCartWithPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/AddCartWithPartOrdersResponse")]
        System.Threading.Tasks.Task<int> AddCartWithPartOrdersAsync(WPF_Client.BestilNemtWPF.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCart", ReplyAction="http://tempuri.org/IBestilNemtService/GetCartResponse")]
        WPF_Client.BestilNemtWPF.Cart GetCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCart", ReplyAction="http://tempuri.org/IBestilNemtService/GetCartResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart> GetCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCartWithPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/GetCartWithPartOrdersResponse")]
        WPF_Client.BestilNemtWPF.Cart GetCartWithPartOrders(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetCartWithPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/GetCartWithPartOrdersResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart> GetCartWithPartOrdersAsync(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCarts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCartsResponse")]
        WPF_Client.BestilNemtWPF.Cart[] GetAllCarts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCarts", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCartsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart[]> GetAllCartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCartsByPersonId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCartsByPersonIdResponse")]
        WPF_Client.BestilNemtWPF.Cart[] GetAllCartsByPersonId(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllCartsByPersonId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllCartsByPersonIdResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart[]> GetAllCartsByPersonIdAsync(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCart", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCartResponse")]
        int UpdateCart(WPF_Client.BestilNemtWPF.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateCart", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateCartResponse")]
        System.Threading.Tasks.Task<int> UpdateCartAsync(WPF_Client.BestilNemtWPF.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCart", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCartResponse")]
        int DeleteCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteCart", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteCartResponse")]
        System.Threading.Tasks.Task<int> DeleteCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrderToCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderToCartResponse")]
        int AddPartOrderToCart(WPF_Client.BestilNemtWPF.Cart cart, WPF_Client.BestilNemtWPF.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrderToCart", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderToCartResponse")]
        System.Threading.Tasks.Task<int> AddPartOrderToCartAsync(WPF_Client.BestilNemtWPF.Cart cart, WPF_Client.BestilNemtWPF.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/GetPartOrderResponse")]
        WPF_Client.BestilNemtWPF.PartOrder GetPartOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/GetPartOrderResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.PartOrder> GetPartOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeletePartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/DeletePartOrderResponse")]
        int DeletePartOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeletePartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/DeletePartOrderResponse")]
        System.Threading.Tasks.Task<int> DeletePartOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderResponse")]
        int AddPartOrder(WPF_Client.BestilNemtWPF.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddPartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/AddPartOrderResponse")]
        System.Threading.Tasks.Task<int> AddPartOrderAsync(WPF_Client.BestilNemtWPF.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdatePartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/UpdatePartOrderResponse")]
        int UpdatePartOrder(WPF_Client.BestilNemtWPF.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdatePartOrder", ReplyAction="http://tempuri.org/IBestilNemtService/UpdatePartOrderResponse")]
        System.Threading.Tasks.Task<int> UpdatePartOrderAsync(WPF_Client.BestilNemtWPF.PartOrder partOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllPartOrdersResponse")]
        WPF_Client.BestilNemtWPF.PartOrder[] GetAllPartOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllPartOrders", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllPartOrdersResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.PartOrder[]> GetAllPartOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/AddWarehouseResponse")]
        int AddWarehouse(WPF_Client.BestilNemtWPF.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/AddWarehouseResponse")]
        System.Threading.Tasks.Task<int> AddWarehouseAsync(WPF_Client.BestilNemtWPF.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/GetWarehouseResponse")]
        WPF_Client.BestilNemtWPF.Warehouse GetWarehouse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/GetWarehouseResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Warehouse> GetWarehouseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllWarehouses", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllWarehousesResponse")]
        WPF_Client.BestilNemtWPF.Warehouse[] GetAllWarehouses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllWarehouses", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllWarehousesResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Warehouse[]> GetAllWarehousesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllWarehousesByShopId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllWarehousesByShopIdResponse")]
        WPF_Client.BestilNemtWPF.Warehouse[] GetAllWarehousesByShopId(int shopId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllWarehousesByShopId", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllWarehousesByShopIdResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Warehouse[]> GetAllWarehousesByShopIdAsync(int shopId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateWarehouseResponse")]
        int UpdateWarehouse(WPF_Client.BestilNemtWPF.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateWarehouseResponse")]
        System.Threading.Tasks.Task<int> UpdateWarehouseAsync(WPF_Client.BestilNemtWPF.Warehouse warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteWarehouseResponse")]
        int DeleteWarehouse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteWarehouse", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteWarehouseResponse")]
        System.Threading.Tasks.Task<int> DeleteWarehouseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddSaving", ReplyAction="http://tempuri.org/IBestilNemtService/AddSavingResponse")]
        int AddSaving(WPF_Client.BestilNemtWPF.Saving saving, WPF_Client.BestilNemtWPF.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddSaving", ReplyAction="http://tempuri.org/IBestilNemtService/AddSavingResponse")]
        System.Threading.Tasks.Task<int> AddSavingAsync(WPF_Client.BestilNemtWPF.Saving saving, WPF_Client.BestilNemtWPF.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetSaving", ReplyAction="http://tempuri.org/IBestilNemtService/GetSavingResponse")]
        WPF_Client.BestilNemtWPF.Saving GetSaving(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetSaving", ReplyAction="http://tempuri.org/IBestilNemtService/GetSavingResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Saving> GetSavingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllSavings", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllSavingsResponse")]
        WPF_Client.BestilNemtWPF.Saving[] GetAllSavings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetAllSavings", ReplyAction="http://tempuri.org/IBestilNemtService/GetAllSavingsResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Saving[]> GetAllSavingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateSaving", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateSavingResponse")]
        int UpdateSaving(WPF_Client.BestilNemtWPF.Saving saving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/UpdateSaving", ReplyAction="http://tempuri.org/IBestilNemtService/UpdateSavingResponse")]
        System.Threading.Tasks.Task<int> UpdateSavingAsync(WPF_Client.BestilNemtWPF.Saving saving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteSaving", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteSavingResponse")]
        int DeleteSaving(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/DeleteSaving", ReplyAction="http://tempuri.org/IBestilNemtService/DeleteSavingResponse")]
        System.Threading.Tasks.Task<int> DeleteSavingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetProductsByName", ReplyAction="http://tempuri.org/IBestilNemtService/GetProductsByNameResponse")]
        WPF_Client.BestilNemtWPF.Product[] GetProductsByName(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/GetProductsByName", ReplyAction="http://tempuri.org/IBestilNemtService/GetProductsByNameResponse")]
        System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetProductsByNameAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCustomerWithLogin", ReplyAction="http://tempuri.org/IBestilNemtService/AddCustomerWithLoginResponse")]
        int AddCustomerWithLogin(WPF_Client.BestilNemtWPF.Customer customer, WPF_Client.BestilNemtWPF.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBestilNemtService/AddCustomerWithLogin", ReplyAction="http://tempuri.org/IBestilNemtService/AddCustomerWithLoginResponse")]
        System.Threading.Tasks.Task<int> AddCustomerWithLoginAsync(WPF_Client.BestilNemtWPF.Customer customer, WPF_Client.BestilNemtWPF.Login login);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBestilNemtServiceChannel : WPF_Client.BestilNemtWPF.IBestilNemtService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BestilNemtServiceClient : System.ServiceModel.ClientBase<WPF_Client.BestilNemtWPF.IBestilNemtService>, WPF_Client.BestilNemtWPF.IBestilNemtService {
        
        public BestilNemtServiceClient() {
        }
        
        public BestilNemtServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BestilNemtServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BestilNemtServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BestilNemtServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WPF_Client.BestilNemtWPF.Customer GetCustomer(int id) {
            return base.Channel.GetCustomer(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Customer> GetCustomerAsync(int id) {
            return base.Channel.GetCustomerAsync(id);
        }
        
        public int AddCustomer(WPF_Client.BestilNemtWPF.Customer customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(WPF_Client.BestilNemtWPF.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public int UpdateCustomer(WPF_Client.BestilNemtWPF.Customer customer) {
            return base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerAsync(WPF_Client.BestilNemtWPF.Customer customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public int DeleteCustomer(int id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Customer[] GetAllCustomer() {
            return base.Channel.GetAllCustomer();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Customer[]> GetAllCustomerAsync() {
            return base.Channel.GetAllCustomerAsync();
        }
        
        public int AddAdmin(WPF_Client.BestilNemtWPF.Admin admin) {
            return base.Channel.AddAdmin(admin);
        }
        
        public System.Threading.Tasks.Task<int> AddAdminAsync(WPF_Client.BestilNemtWPF.Admin admin) {
            return base.Channel.AddAdminAsync(admin);
        }
        
        public WPF_Client.BestilNemtWPF.Admin GetAdmin(int id) {
            return base.Channel.GetAdmin(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Admin> GetAdminAsync(int id) {
            return base.Channel.GetAdminAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Admin[] GetAllAdmins() {
            return base.Channel.GetAllAdmins();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Admin[]> GetAllAdminsAsync() {
            return base.Channel.GetAllAdminsAsync();
        }
        
        public int DeleteAdmin(int id) {
            return base.Channel.DeleteAdmin(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAdminAsync(int id) {
            return base.Channel.DeleteAdminAsync(id);
        }
        
        public int UpdateAdmin(WPF_Client.BestilNemtWPF.Admin admin) {
            return base.Channel.UpdateAdmin(admin);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAdminAsync(WPF_Client.BestilNemtWPF.Admin admin) {
            return base.Channel.UpdateAdminAsync(admin);
        }
        
        public int AddShop(WPF_Client.BestilNemtWPF.Shop shop) {
            return base.Channel.AddShop(shop);
        }
        
        public System.Threading.Tasks.Task<int> AddShopAsync(WPF_Client.BestilNemtWPF.Shop shop) {
            return base.Channel.AddShopAsync(shop);
        }
        
        public WPF_Client.BestilNemtWPF.Shop GetShop(int id) {
            return base.Channel.GetShop(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Shop> GetShopAsync(int id) {
            return base.Channel.GetShopAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Shop[] GetAllShops() {
            return base.Channel.GetAllShops();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Shop[]> GetAllShopsAsync() {
            return base.Channel.GetAllShopsAsync();
        }
        
        public WPF_Client.BestilNemtWPF.Shop[] GetAllShopsByChainId(int chainId) {
            return base.Channel.GetAllShopsByChainId(chainId);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Shop[]> GetAllShopsByChainIdAsync(int chainId) {
            return base.Channel.GetAllShopsByChainIdAsync(chainId);
        }
        
        public int UpdateShop(WPF_Client.BestilNemtWPF.Shop shop) {
            return base.Channel.UpdateShop(shop);
        }
        
        public System.Threading.Tasks.Task<int> UpdateShopAsync(WPF_Client.BestilNemtWPF.Shop shop) {
            return base.Channel.UpdateShopAsync(shop);
        }
        
        public int DeleteShop(int id) {
            return base.Channel.DeleteShop(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteShopAsync(int id) {
            return base.Channel.DeleteShopAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Chain GetChain(int id) {
            return base.Channel.GetChain(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Chain> GetChainAsync(int id) {
            return base.Channel.GetChainAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Chain[] GetAllChains() {
            return base.Channel.GetAllChains();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Chain[]> GetAllChainsAsync() {
            return base.Channel.GetAllChainsAsync();
        }
        
        public int DeleteChain(int id) {
            return base.Channel.DeleteChain(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteChainAsync(int id) {
            return base.Channel.DeleteChainAsync(id);
        }
        
        public int AddChain(WPF_Client.BestilNemtWPF.Chain chain) {
            return base.Channel.AddChain(chain);
        }
        
        public System.Threading.Tasks.Task<int> AddChainAsync(WPF_Client.BestilNemtWPF.Chain chain) {
            return base.Channel.AddChainAsync(chain);
        }
        
        public int UpdateChain(WPF_Client.BestilNemtWPF.Chain chain) {
            return base.Channel.UpdateChain(chain);
        }
        
        public System.Threading.Tasks.Task<int> UpdateChainAsync(WPF_Client.BestilNemtWPF.Chain chain) {
            return base.Channel.UpdateChainAsync(chain);
        }
        
        public WPF_Client.BestilNemtWPF.Login Login(WPF_Client.BestilNemtWPF.Login login1) {
            return base.Channel.Login(login1);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Login> LoginAsync(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.LoginAsync(login);
        }
        
        public int AddLogin(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.AddLogin(login);
        }
        
        public System.Threading.Tasks.Task<int> AddLoginAsync(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.AddLoginAsync(login);
        }
        
        public int UpdateLogin(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.UpdateLogin(login);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLoginAsync(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.UpdateLoginAsync(login);
        }
        
        public int DeleteLogin(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.DeleteLogin(login);
        }
        
        public System.Threading.Tasks.Task<int> DeleteLoginAsync(WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.DeleteLoginAsync(login);
        }
        
        public int AddCompany(WPF_Client.BestilNemtWPF.Company company) {
            return base.Channel.AddCompany(company);
        }
        
        public System.Threading.Tasks.Task<int> AddCompanyAsync(WPF_Client.BestilNemtWPF.Company company) {
            return base.Channel.AddCompanyAsync(company);
        }
        
        public WPF_Client.BestilNemtWPF.Company[] GetAllCompany() {
            return base.Channel.GetAllCompany();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Company[]> GetAllCompanyAsync() {
            return base.Channel.GetAllCompanyAsync();
        }
        
        public int DeleteCompany(int id) {
            return base.Channel.DeleteCompany(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCompanyAsync(int id) {
            return base.Channel.DeleteCompanyAsync(id);
        }
        
        public int UpdateCompany(WPF_Client.BestilNemtWPF.Company company) {
            return base.Channel.UpdateCompany(company);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCompanyAsync(WPF_Client.BestilNemtWPF.Company company) {
            return base.Channel.UpdateCompanyAsync(company);
        }
        
        public WPF_Client.BestilNemtWPF.Company GetCompany(int id) {
            return base.Channel.GetCompany(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Company> GetCompanyAsync(int id) {
            return base.Channel.GetCompanyAsync(id);
        }
        
        public int AddProduct(WPF_Client.BestilNemtWPF.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(WPF_Client.BestilNemtWPF.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public WPF_Client.BestilNemtWPF.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public WPF_Client.BestilNemtWPF.Product[] GetAllSoldProducts() {
            return base.Channel.GetAllSoldProducts();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetAllSoldProductsAsync() {
            return base.Channel.GetAllSoldProductsAsync();
        }
        
        public WPF_Client.BestilNemtWPF.Product[] GetAllProductsWithSavings() {
            return base.Channel.GetAllProductsWithSavings();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetAllProductsWithSavingsAsync() {
            return base.Channel.GetAllProductsWithSavingsAsync();
        }
        
        public int UpdateProduct(WPF_Client.BestilNemtWPF.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductAsync(WPF_Client.BestilNemtWPF.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public int DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public int AddCart(WPF_Client.BestilNemtWPF.Cart cart) {
            return base.Channel.AddCart(cart);
        }
        
        public System.Threading.Tasks.Task<int> AddCartAsync(WPF_Client.BestilNemtWPF.Cart cart) {
            return base.Channel.AddCartAsync(cart);
        }
        
        public int AddCartWithPartOrders(WPF_Client.BestilNemtWPF.Cart cart) {
            return base.Channel.AddCartWithPartOrders(cart);
        }
        
        public System.Threading.Tasks.Task<int> AddCartWithPartOrdersAsync(WPF_Client.BestilNemtWPF.Cart cart) {
            return base.Channel.AddCartWithPartOrdersAsync(cart);
        }
        
        public WPF_Client.BestilNemtWPF.Cart GetCart(int id) {
            return base.Channel.GetCart(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart> GetCartAsync(int id) {
            return base.Channel.GetCartAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Cart GetCartWithPartOrders(int cartId) {
            return base.Channel.GetCartWithPartOrders(cartId);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart> GetCartWithPartOrdersAsync(int cartId) {
            return base.Channel.GetCartWithPartOrdersAsync(cartId);
        }
        
        public WPF_Client.BestilNemtWPF.Cart[] GetAllCarts() {
            return base.Channel.GetAllCarts();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart[]> GetAllCartsAsync() {
            return base.Channel.GetAllCartsAsync();
        }
        
        public WPF_Client.BestilNemtWPF.Cart[] GetAllCartsByPersonId(int personId) {
            return base.Channel.GetAllCartsByPersonId(personId);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Cart[]> GetAllCartsByPersonIdAsync(int personId) {
            return base.Channel.GetAllCartsByPersonIdAsync(personId);
        }
        
        public int UpdateCart(WPF_Client.BestilNemtWPF.Cart cart) {
            return base.Channel.UpdateCart(cart);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCartAsync(WPF_Client.BestilNemtWPF.Cart cart) {
            return base.Channel.UpdateCartAsync(cart);
        }
        
        public int DeleteCart(int id) {
            return base.Channel.DeleteCart(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCartAsync(int id) {
            return base.Channel.DeleteCartAsync(id);
        }
        
        public int AddPartOrderToCart(WPF_Client.BestilNemtWPF.Cart cart, WPF_Client.BestilNemtWPF.PartOrder partOrder) {
            return base.Channel.AddPartOrderToCart(cart, partOrder);
        }
        
        public System.Threading.Tasks.Task<int> AddPartOrderToCartAsync(WPF_Client.BestilNemtWPF.Cart cart, WPF_Client.BestilNemtWPF.PartOrder partOrder) {
            return base.Channel.AddPartOrderToCartAsync(cart, partOrder);
        }
        
        public WPF_Client.BestilNemtWPF.PartOrder GetPartOrder(int id) {
            return base.Channel.GetPartOrder(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.PartOrder> GetPartOrderAsync(int id) {
            return base.Channel.GetPartOrderAsync(id);
        }
        
        public int DeletePartOrder(int id) {
            return base.Channel.DeletePartOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeletePartOrderAsync(int id) {
            return base.Channel.DeletePartOrderAsync(id);
        }
        
        public int AddPartOrder(WPF_Client.BestilNemtWPF.PartOrder partOrder) {
            return base.Channel.AddPartOrder(partOrder);
        }
        
        public System.Threading.Tasks.Task<int> AddPartOrderAsync(WPF_Client.BestilNemtWPF.PartOrder partOrder) {
            return base.Channel.AddPartOrderAsync(partOrder);
        }
        
        public int UpdatePartOrder(WPF_Client.BestilNemtWPF.PartOrder partOrder) {
            return base.Channel.UpdatePartOrder(partOrder);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePartOrderAsync(WPF_Client.BestilNemtWPF.PartOrder partOrder) {
            return base.Channel.UpdatePartOrderAsync(partOrder);
        }
        
        public WPF_Client.BestilNemtWPF.PartOrder[] GetAllPartOrders() {
            return base.Channel.GetAllPartOrders();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.PartOrder[]> GetAllPartOrdersAsync() {
            return base.Channel.GetAllPartOrdersAsync();
        }
        
        public int AddWarehouse(WPF_Client.BestilNemtWPF.Warehouse warehouse) {
            return base.Channel.AddWarehouse(warehouse);
        }
        
        public System.Threading.Tasks.Task<int> AddWarehouseAsync(WPF_Client.BestilNemtWPF.Warehouse warehouse) {
            return base.Channel.AddWarehouseAsync(warehouse);
        }
        
        public WPF_Client.BestilNemtWPF.Warehouse GetWarehouse(int id) {
            return base.Channel.GetWarehouse(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Warehouse> GetWarehouseAsync(int id) {
            return base.Channel.GetWarehouseAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Warehouse[] GetAllWarehouses() {
            return base.Channel.GetAllWarehouses();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Warehouse[]> GetAllWarehousesAsync() {
            return base.Channel.GetAllWarehousesAsync();
        }
        
        public WPF_Client.BestilNemtWPF.Warehouse[] GetAllWarehousesByShopId(int shopId) {
            return base.Channel.GetAllWarehousesByShopId(shopId);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Warehouse[]> GetAllWarehousesByShopIdAsync(int shopId) {
            return base.Channel.GetAllWarehousesByShopIdAsync(shopId);
        }
        
        public int UpdateWarehouse(WPF_Client.BestilNemtWPF.Warehouse warehouse) {
            return base.Channel.UpdateWarehouse(warehouse);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWarehouseAsync(WPF_Client.BestilNemtWPF.Warehouse warehouse) {
            return base.Channel.UpdateWarehouseAsync(warehouse);
        }
        
        public int DeleteWarehouse(int id) {
            return base.Channel.DeleteWarehouse(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteWarehouseAsync(int id) {
            return base.Channel.DeleteWarehouseAsync(id);
        }
        
        public int AddSaving(WPF_Client.BestilNemtWPF.Saving saving, WPF_Client.BestilNemtWPF.Product product) {
            return base.Channel.AddSaving(saving, product);
        }
        
        public System.Threading.Tasks.Task<int> AddSavingAsync(WPF_Client.BestilNemtWPF.Saving saving, WPF_Client.BestilNemtWPF.Product product) {
            return base.Channel.AddSavingAsync(saving, product);
        }
        
        public WPF_Client.BestilNemtWPF.Saving GetSaving(int id) {
            return base.Channel.GetSaving(id);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Saving> GetSavingAsync(int id) {
            return base.Channel.GetSavingAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Saving[] GetAllSavings() {
            return base.Channel.GetAllSavings();
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Saving[]> GetAllSavingsAsync() {
            return base.Channel.GetAllSavingsAsync();
        }
        
        public int UpdateSaving(WPF_Client.BestilNemtWPF.Saving saving) {
            return base.Channel.UpdateSaving(saving);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSavingAsync(WPF_Client.BestilNemtWPF.Saving saving) {
            return base.Channel.UpdateSavingAsync(saving);
        }
        
        public int DeleteSaving(int id) {
            return base.Channel.DeleteSaving(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSavingAsync(int id) {
            return base.Channel.DeleteSavingAsync(id);
        }
        
        public WPF_Client.BestilNemtWPF.Product[] GetProductsByName(string input) {
            return base.Channel.GetProductsByName(input);
        }
        
        public System.Threading.Tasks.Task<WPF_Client.BestilNemtWPF.Product[]> GetProductsByNameAsync(string input) {
            return base.Channel.GetProductsByNameAsync(input);
        }
        
        public int AddCustomerWithLogin(WPF_Client.BestilNemtWPF.Customer customer, WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.AddCustomerWithLogin(customer, login);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerWithLoginAsync(WPF_Client.BestilNemtWPF.Customer customer, WPF_Client.BestilNemtWPF.Login login) {
            return base.Channel.AddCustomerWithLoginAsync(customer, login);
        }
    }
}
